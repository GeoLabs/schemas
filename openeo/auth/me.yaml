description: Information about the logged in user.
content:
  application/json:
    schema:
      title: User Data
      description: >-
        Holds user information. If no budget or storage limit applies
        to the user account the corresponding properties MUST be set
        to null.
      type: object
      required:
        - user_id
      properties:
        user_id:
          type: string
          description: >-
            A unique user identifier specific to the back-end, which could either be chosen by a user or is automatically generated by the back-end during the registration process at the back-end.

            It is meant to be used as an identifier in URIs (e.g. for sharing purposes), which is primarily used in machine-to-machine communication. Preferrably use the human-readable property `name` to display the user's name in user interfaces instead of the user identifier.
          pattern: '^[\w\-\.~]+$'
          example: john_doe
        name:
          type: string
          description: >-
            The user name, a human-friendly displayable name. Could be 
            the user's real name or a nickname.
        default_plan:
          type: string
          description: Name of the single plan the user is currently subscribed to if any.
          example: free
        storage:
          title: User Storage
          description: Information about the storage space available to the user.
          type: object
          nullable: true
          required:
            - free
            - quota
          properties:
            free:
              type: integer
              description: >-
                Free storage space in bytes, which is still available
                to the user. Effectively, this is the disk quota minus
                the used space by the user, e.g. user-uploaded files
                and job results.
              example: 536870912
            quota:
              type: integer
              description: >-
                Maximum storage space (disk quota) in bytes available
                to the user.
              example: 1073741824
        budget:
          type: number
          nullable: true
          description: |-
            The remaining budget a user has available.
            The value MUST be specified in the currency of the back-end.
            The value SHOULD be set to `null` if no explicit limit applies.
        links:
          description: |-
            Links related to the user profile, e.g. where payments
            are handled or the user profile could be edited.

            It is RECOMMENDED to provide links with the following `rel` (relation) types:

            1. `payment`: A page where users can recharge their user account with money or credits.

            2. `edit-form`: Points to a page where the user can edit his user profile.

            3. `alternate`: Any other representation of these (and potentially additional)
            user information, e.g. the (public) user profile page.
            It is RECOMMENDED to add descriptive titles for a better user experience.

            4. `related`: Any other user-specific links to be shown in clients,
            e.g. to user-specific settings, invoices, etc. It is RECOMMENDED to 
            add descriptive titles for a better user experience.

            For additional relation types see also the lists of
            [common relation types in openEO](#section/API-Principles/Web-Linking).
          type: array
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: 'https://openeo.example/john_doe/payment/'
              rel: payment
            - href: 'https://openeo.example/john_doe/edit/'
              rel: edit-form
            - href: 'https://openeo.example/john_doe/'
              rel: alternate
              type: text/html
              title: User profile
            - href: 'https://openeo.example/john_doe.vcf'
              rel: alternate
              type: text/vcard
              title: vCard of John Doe
            - href: 'https://openeo.example/john_doe/invoices'
              rel: related
              type: text/html
              title: Invoices